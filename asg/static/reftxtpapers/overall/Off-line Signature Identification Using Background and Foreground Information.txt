Off-line Signature Identification Using Background and Foreground Information
Srikanta Pal,Umapada Pal,Michael Blumenstein
srikanta.pal@griffithuni.,alireza20alaei@y,umapada@isical.,m.blumenstein@griffith.

Abstract
Biometric systems play an important role in the field of information security as they are extremely required for user authentication. Automatic signature recognition and verification is one of the biometric techniques, which is currently receiving renewed interest and is only one of several techniques used to verify the identities of individuals. Signatures provide a secure means for confirmation and authorization in legal documents. So nowadays, signature identification and verification becomes an essential component in automating the rapid processing of documents containing embedded signatures. In this paper, a technique for a bi-script off-line signature identification system is proposed. In the proposed signature identification system, the signatures of English and Bengali (Bangla) are considered for the identification process. Different features such as undersampled bitmaps, modified chain-code direction features and gradient features computed from both background and foreground components are employed for this purpose. Support Vector Machines (SVMs) and Nearest Neighbour (NN) techniques are considered as classifiers for signature identification in the proposed system. A database of 1554 English signatures and 1092 Bengali signatures are used to generate the experimental results. Various results based on different features are calculated and analysed. The highest accuracies of 99.41%, 98.45% and 97.75% are obtained based on the modified chain-code direction, under-sampled bitmaps and gradient features respectively using 1800 (1100 English+700 Bengali) samples for training and 846 (454 English+392 Bengali) samples for testing.

I. INTRODUCTION
Today, biometric technologies are increasingly and more commonly being used to ensure identity verification or the authorisation of access to sensitive data. For historical reasons, the handwritten signature continues to be the most commonly accepted form of transaction confirmation, as well as being used in civil law contracts, acts of volition, or authenticating one's identity. Signature verification has been a topic of intensive research during the past several years [1- 13] due to the important role it plays in numerous areas, including the financial system.
Signatures have been accepted as an official means to verify personal identity for legal purposes on such documents such as cheques, credit cards, wills etc. The handwritten signature is therefore well established and accepted as a behavioral biometric. Considering the large number of signatures verified daily through visual inspection by people, the construction of a robust and accurate automatic signature verification system has many potential benefits for ensuring authenticity of signatures and reducing fraud and other crimes.
The goal of a signature verification system is to verify the identity of an individual based on an analysis of his or her signature through a process that discriminates a genuine signature from a forgery. The verification of human signatures is particularly concerned with the improvement of the interface between human-beings and computers [2]. A signature verification system and the associated techniques used to solve the inherent problems of authentication can be divided into two classes [3]: (a) on-line methods [4] to measure temporal and sequential data by utilizing intelligent algorithms [5] and (b) off-line methods [6] that use an optical scanner to obtain handwriting data written on paper. Off-line signature verification deals with the verification of signatures, which appear in a static format [7]. On-line signature verification has been shown to achieve much higher verification rates than off-line verification [6], as a considerable amount of dynamic information is lost in the off-line mode. But off-line systems have a significant advantage as they do not require access to special processing devices when the signatures are produced. Moreover, the offline method has many more practical application areas than that of the on-line variety.
Signatures represent a particular writing style and very often are a combination of symbols and strokes. So it is obviously necessary to deal with a signature as a complete image with a special distribution of pixels, representing a particular writing style and is not considered as a collection of letters and words [8]. It is often difficult for a human to instantly verify two signatures of the same person because signature samples from the same person are similar but not identical, and signatures can change depending on elements such as mood, fatigue and time. In addition, a person’s signature often changes radically during their lifetime. Great inconsistency can even be observed in sign to country, habits, psychological or mental s practical conditions [9].
Numerous techniques for feature classification have been put forward in the processing of signatures. Justino et al. [10] line signature verification system based on Models (HMMs) to detect random, cas forgeries. Three features: a pixel density distribution feature and an axial slant feat from a grid segmentation scheme. Lv et al. Chinese off-line signature verification syst data base of 1100 signatures. Support Vecto employed for classification. Four different such as Moment feature, Direction feature, and Stroke width distribution feature we research. Nguyen et al. [12] developed an verification system based on global features Vector Machine classifier. In their paper, th the Modified Direction Feature (MDF) w features: feature from Energy information, and ratio feature are reported. In addition Weiping et al. [13] summarises some additi approaches that have been previously investi
Although, many systems involving o recognition and verification have been devel systems have solely considered single-s However, signatures may be written in dif and there is a need to undertake a systema area. In the field of signature verificatio published work has been undertaken only signatures. Only a few studies have bee Chinese, Japanese, Persian and Arabic indicated earlier, researchers have used diff signature verification and it was noted that work is based on foreground information. Moreover, to the best of our knowle published work on signatures written in I India is a multi-lingual and multi-script co people write signatures in local state lan Hindi, Bangla, Telugu, and Tamil. Thus th work on signatures written in Indian lang off-line signature identification considering or more languages. This area of signature i verification would be considered as a nove the field. In this paper we propose a signat system for two scripts: Bangla and English our knowledge, background information ha used in signature identification research, a system is the first work of its kind that uses background and foreground information results. Some Bengali and English signat shown in Table I and Table II, respectively.
The remainder of this paper is organ Section II deals the feature extraction techn Details of the classifiers used are presented in Section III. Results and discussion are given in Section IV and error analysis is detailed in Section V. Finally, conclusions and future work are discussed in Section VI.

A. Under-sampled bitmap feature
Under-sampled bitmaps have be by many researchers for the purpose they have shown good performance To obtain the under-sampled bitma divided into a number of non-overl size. Then, the number of black tallied. This generates an input m being an integer in the range of 0 overlapping blocks. By dividing the the block, the values are normalize under-sampling process considerabl of features compared to the whol inputs. It also provides invariance slant. In the literature, only foreground in to compute the under-sampled bitm proposed under-sampled bitmap-b technique, both the foreground and are used. First, the input signature filtering process is performed, and t input image is found. Then for the independency of features to size a scale and translation), each signatu
in Section IV and error Finally, conclusions and VI.
RE SAMPLES
URE SAMPLES
CTION ets of features (Underde direction and gradient ignature images for the . Before extracting the performed to eliminate nature images.
en used in the literature of feature extraction and in different areas [14]. ps, each input image is apping blocks of similar pixels in each block is atrix with each element to the size of the nonse values into the size of d between 0 and 1. The y reduces dimensionality e image size as feature to small distortions and
formation has been used ap features [15]. In the ased feature extraction background information image is binarized. A
he bounding box of each enhanced results and the nd position (invariant to re image located in the
bounding box is converted to a normal size of 200×800 pixels (Figure 1). This value is decided experimentally. To compute 100-dimension foreground under-sampled bitmap features, the normalized image (200×800) is divided into 100 non-overlapping blocks of 20×80 (Figure 2). The number of black pixels is then counted in each block. This generates an input matrix of 10×10 with each element being an integer in the range of 0 to 1600. By dividing these values into the size of the block (1600), the values are normalized between 0 and 1. The result of the pixel distribution obtained from Figure 2 is shown in Figure 3. To obtain the background information, all the columns of the input image are scanned from top to bottom and from bottom to top to get the uppermost and lowermost black pixels. The portion between the uppermost and lowermost black pixels is converted into black. All the rows of the input image are scanned from left to right and from right to left to get the leftmost and rightmost black pixels. The portion between the leftmost and rightmost black pixels is also converted into black. In this way the black ground portion of every signature is detected. This converted black pixels portion is called the background area. The features are extracted on the portion of background area. Figure 4 shows the background areas obtained from the image shown in Figure 1. To compute 100-dimension background under-sampled bitmap features, the normalized image (200×800) is divided into 100 non-overlapping blocks of 20×80 (Figure 5).The same procedures performed on the foreground part to obtain the 100 under-sampled bitmap features, are applied on the background area to obtain 100 under-sampled bitmap features for the background. Finally, the sum of these two feature vectors (one from the foreground and the other from the background) is taken to obtain the final resultant feature vector. As a result, 100 under-sampled bitmap features are obtained for each signature image. For computing the 200-dimension undersampled bitmap features, both the normalized foreground and background images are divided into 200 non-overlapping blocks of size 20×40. Similar to the 100-dimention features, 200 features are extracted. For 400-dimension features a similar procedure is performed where the size of nonoverlapping blocks are 10×40. As a result, 400 undersampled bitmap features are obtained accordingly.

367 9 0 0 0 0 0 0 0 0
1 93 14 75 30 159 285 325 0 0
B. Chain-code direction feature extraction
The chain-code direction information of the contour points of the foreground pixels of an input image have been used as features for different purposes such as numeral/character segmentation, and recognition [18]. In this feature, computation of both the foreground and background are used and their combination was considered for this work. To compute the chain-code direction frequency features of foreground information, the contour of the foreground of the normalized image is obtained (Figure 6). The contour of the signature image is then divided into 100 non-overlapping blocks (Figure 7). For each non-overlapping block, the chain code frequencies for all 8 directions (Figure 9) are computed. Instead of expressing the features in terms of 8 directions, we consider only 4 directions: (i) Horizontal direction code (direction 0 and 4), (ii) Vertical direction code (direction 2 and 6), (iii) Diagonal direction code (direction 1 and 5) and (iv) Off-diagonal direction code (direction 3 and 7). Thus, in each block, four features representing the frequencies of these four directions are obtained (an illustration of these values from a block is given in Figure 8). As a result, in each image, we obtain 400 (100×4) features from the foreground information. To compute 400 modified chain-code direction features for the background information, the same procedures performed on the foreground part to get the 400 modified chain-code direction features is employed on the background contour area to obtain 400 modified chain-code direction features for the background. Figures 10 and 11 demonstrate the contour of the normalized background and nonoverlapping blocks of the background image, respectively. Finally, the sum of these two feature vectors (one from the foreground and the other from the background) is computed
to get the final resultant feature vector. As a result, 400 modified chain-code direction features are obtained for each signature image.
Figure 7. Non-overlapping window-map of size 20×80 on contour of the foreground information of the signature image
Figure 8. Zoomed version of a block and the extracted feature values in 4 directions (here values of 0, 1, 2 and 3 directions are 28, 26, 4 and 5, recpectively)
Figure 9. Point P and its 8-direction codes
Figure 10. Contour of the background information of the signature image shown in Figure 4
Figure 11. Non-overlapping window-map of size 20×80 on the contour of the background information of the signature image
C. 400 dimensional gradient feature extraction The gray-scale local-orientation histogram of an image component is used for 400-dimensional feature extraction. To obtain 400 dimensional features, at first, the size of the input binary image is normalized by resizing the image into 126×126 pixels. The input binary image is converted into a gray-scale image applying 2×2 mean filtering 5 times. The normalized image is segmented into 16 overlapping blocks of size 9×9. A Robert’s filter is then applied on the image to obtain the gradient image. The arc tangent of the gradient is quantized into 16 directions (an interval of 22.5º) and the strength of the gradient is accumulated with each of the quantized directions. By strength of Gradient ( ),( yxf ) we mean ( ) ( )22),( vuyxf Δ+Δ= and by direction of gradient (
)),( yxθ we mean u vyx Δ Δ= −1tan),(θ , here ),()1,1( yxgyxgu −++=Δ , )1,(),1( +−+=Δ yxgyxgv and ),( yxg is a gray scale value at an (x, y) point. Histograms of
the values of 16 quantized directions are computed in each of the 9×9 blocks. 9×9 blocks are finally down-sampled into 5×5 by a Gaussian filter to obtain 5×5×16 = 400 gradient features. The same procedure is employed on the background information (shown in Figure 4) to get another 400 Gaussian features for background information. Adding these two feature vectors, a new 400-dimension feature vector is obtained.
III. CLASSIFIERS DETAILS

A. SVM Classifier
In our experiments, we have used a Support Vector Machine (SVM) as a classifier. The SVM is originally defined for two-class problems and it looks for the optimal hyper plane which maximizes the distance, the margin, between the nearest examples of both classes, named support vectors (SVs). Given a training database of M data: {xm| m=1,..., M}, the linear SVM classifier is then defined as:
bxxxf j j j +⋅= α)(
where {xj} are the set of support vectors and the parameters αj and b have been determined by solving a quadratic problem [16]. The linear SVM can be extended to various non-linear variants; details can be found in [16, 17]. In our experiments, the Gaussian kernel SVM outperformed other non-linear SVM kernels, hence we are reporting our
recognition results based on the Gaussian kernel only. Different parameters of the kernel are chosen experimentally.

B. Nearest Neighbors Classifier
Amongst the various methods of supervised statistical pattern recognition, the Nearest Neighbour (NN) rule achieves consistently high performance, without a priori assumptions about the distributions from which the training examples are drawn. A new sample is classified by calculating the distance to the nearest training case; the sign of that point then determines the classification of the sample. The k-NN classifier extends this idea by taking the k nearest points and assigning the sign of the majority. It is common to select k small and odd to break ties (typically 1, 3, 5 or 7). Larger k values help reduce the effects of noisy points within the training data set, and the choice of k is often performed through cross-validation. The distances can be calculated using one of the distance measures such as Euclidian, Mahalanobis and City-block. In this paper, the Euclidian distance measure is used for experimentation.
IV. RESULTS AND DISCUSSION
A. SIGNATURE COLLECTION The signatures of English and Bengali scripts are considered for this signature identification approach. As no public signature data set was available for Bengali script, it was necessary to create a custom database, which included English as well as Bengali signatures. The data set of 1092 Bengali signatures was collected from 50 individuals from different parts in West Bengal, India. Another dataset of 1554 English signatures was collected from 65 individuals from Australia and India. A database of 1800 (1100 English+700 Bengali) signature samples for training and 846 (454 English+392 Bengali) signature samples for testing was used for our experiment.The training and test samples were allocated nearly 66.66% and 33.33% respectively of total signature samples for each script.
B. EXPERIMENTAL RESULT Table III shows the results of various features computed from both foreground and background parts and applied using different classifiers for signature identification of Bangla and English scripts. To obtain a better understanding of the advantage of using both foreground and background features instead of using only foreground features, results obtained only on foreground features are also shown in Table-III and they are given in parentheses. It can be seen that the use of a combination of background and foreground features generated better results than that of only foreground features. From Table III it can be noted that the best result (99.41%) was obtained using 400-dimention chain-code direction features and the SVM classifier. 100-dimension features extracted from under-sampled bitmaps have also demonstrated good results. The results are also plotted in two different ways (Figures 12 and 13) to show the significance of features and classifiers, respectively. Figure 12 demonstrates the effectiveness of different feature sets. Amongst the features, 400-dimension modified chain-code direction features extracted based on the combination of foreground and background information gave the best
performance. From Figure 13 it is evident that the SVM classifier performed the best.
V. ERROR ANALYSIS Confusion matrices obtained from different classifiers and features are shown in Table IV to Table VIII. Table IV shows the confusion matrix of the best results obtained using 400- dimension modified chain-code direction features and SVMs. We noted that only 5 Bangla signatures were misidentified as English signatures. A sample of such errors is shown in Figure 14. From Figure 14, it is evident that some components of the Bangla signature images look like English characters, and this caused misidentification of that signature. Furthermore, our experiments demonstrate that most of the errors occurred because of misclassification of Bangla signatures as English signatures irrespective of the classifiers and feature sets (Tables V, VI, VII and VIII).
VI. CONCLUSIONS AND FUTURE WORK This paper presents a signature identification scheme of biscript off-line signatures. Different feature sets and classifiers for off-line signature verification were utilized and very
encouraging results were obtained. To the best of our knowledge, background features have never been used for the task of signature verification and this is the first report of using background features in this area. This scheme of biscript off-line signature identification is also a novel contribution to the field of signature verification. In the near future, we plan to extend our work for multi-script off-line signature verification.

References
[1]S. Chen,S. SrihariUse of Exterior Contour and Shape Features in Off-line Signature Verification8th ICDAR, pp. 1280-12842005
[2]M.A. Ferrer,J.B. Alonso,C.M. TraviesoOff-line Geometric Parameters for Automatic SignatureVerification Using Fixed-Point Arithmetic" IEEE PAMIVol.27, no.6, pp. 993-9972005
[3]S. Madabusi,V. Srinivas,S. Bhaskaran,M. BalasubramanianOn-line and off-line signature verification using relative slope algorithmInternational Workshop on Measurement Systems for Homeland Security, pp. 11-152005
[4]S. Emerich,E. Lupu,C. RusuOn-line Signature Recognition Approach Based on Wavelets and Support Vector MachinesIntl Conf. on Automation Quality and Testing Robotics, pp.1-42010
[5]A. Kholmatov,B. YanikogluIdentity Authentication using improved online signature verification methodPRL, Vol-26, pp. 2400-24082005
[6]M. Kalera,S. Srihariand AXu. “Offline signature verification and identification using distance statistics”,IJPRAI, pp.1339-13602004
[7]I. Pottier,G. Burel‘Identification and Authentication of Handwritten Signatures with a Connectionist ApproachProc. IEEE Conf. On Neural Networks, pp. 2948-29511994
[8]B. Fang,C.H. Leung,Y.Y. Tang,K.W. Tse,P.C.K. Kwok,Y.K. WongOff-line signature verification by the tracking of feature and stroke positionsPattern Recognition, Vol. 36, pp. 91-1012003
[9]Katrin FrankeAnalysis of Authentic Signatures and ForgeriesIn Proc. IWCF, pp 150-164,2009
[10]E. Justino,E. Bortolozzi,R SabourinOff-line Signature Verification Using HMM for RandomSimple and Skilled Forgeries,” Proceedings of 7 ICDAR, pp. 105-1102001
[11]H. Lv,W. Wang,C. Wangand QZhuo, “Off-line chinese signature verification based on support vector machines,” Pattern Recogntion Letters, vol. 26, no. 15, pp. 2390–23992005
[12]V. Nguyen,M. Blumenstein,G. LeedhamGlobal Features for the Off-Line Signature Verification ProblemProceedings of 10 ICDAR, pp.1300-13042009
[13]H. Weiping,Y. Xiufenand WKejun, "A survey of off-line signature verification," Proceedings of the Intl. Conf. on Intelligent Mechatronics and Automation, pp. 536-5412004
[14]A. AlaeiPNagabhushan and Umapada Pal, “A New Two-stage Scheme for the Recognition of Persian Handwritten Characters”, Proceedings of 12th ICFHR, pp.130-1352010
[15]E. Alpaydin,C. KaynakCascading ClassifiersKybernetika, 34(4), pp. 369-3741998
[16]C. BurgesA Tutorial on support Vector machines for pattern recognitionData mining and knowledge discovery, pp.1-431998
[17]F. KimuraTWakabayashi, S.Tsuruoka and Y. Miyake, “Improvement of handwritten Japanese character recognition using weighted direction code histogram”, Pattern recognition. 30(8), pp.1329-13371997
